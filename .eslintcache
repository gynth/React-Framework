[{"D:\\Project\\react\\src\\index.js":"1","D:\\Project\\react\\src\\Store\\Store.js":"2","D:\\Project\\react\\src\\App.js":"3","D:\\Project\\react\\src\\Login.js":"4","D:\\Project\\react\\src\\Home.js":"5","D:\\Project\\react\\src\\Cookies.js":"6","D:\\Project\\react\\src\\Method\\Store.js":"7","D:\\Project\\react\\src\\Program\\WindowFrame.js":"8","D:\\Project\\react\\src\\Component\\Control\\ExplainInput.js":"9","D:\\Project\\react\\src\\Component\\Control\\Button.js":"10","D:\\Project\\react\\src\\db\\Mysql\\Mysql.js":"11","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js":"12","D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabList.js":"13","D:\\Project\\react\\src\\db\\Mysql\\MysqlServer.js":"14","D:\\Project\\react\\src\\Method\\Comm.js":"15","D:\\Project\\react\\src\\Method\\Grid.js":"16","D:\\Project\\react\\src\\Program\\MES\\PgmTest.js":"17","D:\\Project\\react\\src\\JSON\\jsonControl.js":"18","D:\\Project\\react\\src\\Program\\MES\\Chart\\PgmTest2.js":"19","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js":"20","D:\\Project\\react\\src\\Program\\MES\\Menu.js":"21","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js":"22","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js":"23","D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js":"24","D:\\Project\\react\\src\\Component\\Control\\DetailDiv.js":"25","D:\\Project\\react\\src\\Component\\Control\\SearchDiv.js":"26","D:\\Project\\react\\src\\Method\\Popup.js":"27","D:\\Project\\react\\src\\Method\\Component.js":"28","D:\\Project\\react\\src\\Component\\Control\\Input.js":"29","D:\\Project\\react\\src\\Component\\Control\\Combobox.js":"30","D:\\Project\\react\\src\\Component\\Control\\DateTime.js":"31","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart1.js":"32","D:\\Project\\react\\src\\Component\\Control\\Number.js":"33","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart2.js":"34","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart3.js":"35","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js":"36","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart4.js":"37","D:\\Project\\react\\src\\Component\\Grid\\Column\\Number.js":"38","D:\\Project\\react\\src\\Component\\Grid\\Column\\Input.js":"39","D:\\Project\\react\\src\\Component\\Grid\\Grid.js":"40","D:\\Project\\react\\src\\Component\\Layout\\Layout.js":"41","D:\\Project\\react\\src\\Component\\Grid\\Column\\DateTime.js":"42","D:\\Project\\react\\src\\Component\\Grid\\Column\\Combobox.js":"43","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js":"44","D:\\Project\\react\\src\\Component\\Popup\\PopupFrame.js":"45","D:\\Project\\react\\src\\Program\\POPUP\\PopupTest.js":"46"},{"size":280,"mtime":1623198507106,"results":"47","hashOfConfig":"48"},{"size":720,"mtime":1623198507098,"results":"49","hashOfConfig":"48"},{"size":423,"mtime":1623198506881,"results":"50","hashOfConfig":"48"},{"size":8669,"mtime":1623287890068,"results":"51","hashOfConfig":"48"},{"size":2339,"mtime":1623198789146,"results":"52","hashOfConfig":"48"},{"size":540,"mtime":1623198506986,"results":"53","hashOfConfig":"48"},{"size":23552,"mtime":1623287890068,"results":"54","hashOfConfig":"48"},{"size":8266,"mtime":1623287890068,"results":"55","hashOfConfig":"48"},{"size":2540,"mtime":1623198506898,"results":"56","hashOfConfig":"48"},{"size":2100,"mtime":1623198506882,"results":"57","hashOfConfig":"48"},{"size":6661,"mtime":1623198507100,"results":"58","hashOfConfig":"48"},{"size":4687,"mtime":1623198506975,"results":"59","hashOfConfig":"48"},{"size":3073,"mtime":1623287890068,"results":"60","hashOfConfig":"48"},{"size":1738,"mtime":1623198507102,"results":"61","hashOfConfig":"48"},{"size":3421,"mtime":1623198507062,"results":"62","hashOfConfig":"48"},{"size":2093,"mtime":1623287890068,"results":"63","hashOfConfig":"48"},{"size":18652,"mtime":1623835645677,"results":"64","hashOfConfig":"48"},{"size":1143,"mtime":1623198507057,"results":"65","hashOfConfig":"48"},{"size":6851,"mtime":1623198507076,"results":"66","hashOfConfig":"48"},{"size":1382,"mtime":1623198506974,"results":"67","hashOfConfig":"48"},{"size":24208,"mtime":1623287890068,"results":"68","hashOfConfig":"48"},{"size":1121,"mtime":1623198506969,"results":"69","hashOfConfig":"48"},{"size":474,"mtime":1623198506977,"results":"70","hashOfConfig":"48"},{"size":2132,"mtime":1623287890068,"results":"71","hashOfConfig":"48"},{"size":388,"mtime":1623198506891,"results":"72","hashOfConfig":"48"},{"size":255,"mtime":1623198506906,"results":"73","hashOfConfig":"48"},{"size":1068,"mtime":1623198507066,"results":"74","hashOfConfig":"48"},{"size":1819,"mtime":1623287890068,"results":"75","hashOfConfig":"48"},{"size":6965,"mtime":1623198506901,"results":"76","hashOfConfig":"48"},{"size":7175,"mtime":1623198506884,"results":"77","hashOfConfig":"48"},{"size":8663,"mtime":1623287890068,"results":"78","hashOfConfig":"48"},{"size":3372,"mtime":1623198507071,"results":"79","hashOfConfig":"48"},{"size":7848,"mtime":1623287890068,"results":"80","hashOfConfig":"48"},{"size":1917,"mtime":1623198507073,"results":"81","hashOfConfig":"48"},{"size":3131,"mtime":1623198507074,"results":"82","hashOfConfig":"48"},{"size":853,"mtime":1623198506971,"results":"83","hashOfConfig":"48"},{"size":2181,"mtime":1623198507075,"results":"84","hashOfConfig":"48"},{"size":4696,"mtime":1623287890068,"results":"85","hashOfConfig":"48"},{"size":5031,"mtime":1623198506933,"results":"86","hashOfConfig":"48"},{"size":19259,"mtime":1623287890068,"results":"87","hashOfConfig":"48"},{"size":3834,"mtime":1623198506966,"results":"88","hashOfConfig":"48"},{"size":4266,"mtime":1623287890068,"results":"89","hashOfConfig":"48"},{"size":9506,"mtime":1623198506927,"results":"90","hashOfConfig":"48"},{"size":1361,"mtime":1623198506972,"results":"91","hashOfConfig":"48"},{"size":4358,"mtime":1623835586251,"results":"92","hashOfConfig":"48"},{"size":1121,"mtime":1623198507093,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1ai3dju",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},"D:\\Project\\react\\src\\index.js",[],["193","194"],"D:\\Project\\react\\src\\Store\\Store.js",[],"D:\\Project\\react\\src\\App.js",[],"D:\\Project\\react\\src\\Login.js",["195","196"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {injectAsyncReducer} from './Store/Store';\r\n\r\nimport styles from './Main.module.css';\r\nimport ExplainInput from './Component/Control/ExplainInput';\r\nimport Button from './Component/Control/Button';\r\n\r\nimport { getDynamicSql_Mysql } from './db/Mysql/Mysql';\r\nimport { setSessionCookie, getSessionCookie} from \"./Cookies\";\r\n\r\nimport { gfs_getStoreValue } from './Method/Store';\r\n\r\n//#region 리듀서 생성\r\nconst loginReducer = (nowState, action) => {\r\n  if(action.reducer !== 'LOGIN_REDUCER') {\r\n    return {\r\n      userIdFocus: nowState === undefined ? false : nowState.userIdFocus,\r\n      pwdFocus   : nowState === undefined ? false : nowState.pwdFocus,\r\n      userIdText : nowState === undefined ? '' : nowState.userIdText,\r\n      pwdText    : nowState === undefined ? '' : nowState.pwdText,\r\n    };\r\n  }\r\n\r\n  if(action.type === 'USERID_FOCUS'){\r\n    return Object.assign({}, nowState, {\r\n      userIdFocus  : action.userIdFocus\r\n    });\r\n  }else if(action.type === 'PWD_FOCUS'){\r\n    return Object.assign({}, nowState, {\r\n      pwdFocus  : action.pwdFocus\r\n    });\r\n  }else if(action.type === 'USERID_CHANGE'){\r\n    return Object.assign({}, nowState, {\r\n      userIdText   : action.userIdText\r\n    });\r\n  }else if(action.type === 'PWD_CHANGE'){\r\n    return Object.assign({}, nowState, {\r\n      pwdText   : action.pwdText\r\n    });\r\n  }\r\n};\r\n\r\nconst userReducer = (nowState, action) => {\r\n  if(action.reducer !== 'USER_REDUCER') {\r\n    return {\r\n      COP_CD    : nowState === undefined ? ''           : nowState.COP_CD,\r\n      USER_ID   : nowState === undefined ? 'KKH'        : nowState.USER_ID,\r\n      USER_NAM  : nowState === undefined ? '김경현'      : nowState.USER_NAM,\r\n      LANGUAGE  : nowState === undefined ? 'KOR'        : nowState.LANGUAGE,\r\n      // YMD_FORMAT: nowState === undefined ? 'yyyy-MM-DD' : nowState.YMD_FORMAT,\r\n      YMD_FORMAT: nowState === undefined ? 'MM-DD-yyyy' : nowState.YMD_FORMAT,\r\n      YM_FORMAT : nowState === undefined ? 'yyyy-MM'    : nowState.YM_FORMAT,\r\n      NUM_FORMAT: nowState === undefined ? '0,0'        : nowState.NUM_FORMAT,\r\n      NUM_ROUND : nowState === undefined ? '2R'         : nowState.NUM_ROUND\r\n    };\r\n  }\r\n\r\n  if(action.type === 'USERID_FOCUS'){\r\n    return Object.assign({}, nowState, {\r\n      userIdFocus  : action.userIdFocus\r\n    });\r\n  }else if(action.type === 'PWD_FOCUS'){\r\n    return Object.assign({}, nowState, {\r\n      pwdFocus  : action.pwdFocus\r\n    });\r\n  }else if(action.type === 'USERID_CHANGE'){\r\n    return Object.assign({}, nowState, {\r\n      userIdText   : action.userIdText\r\n    });\r\n  }else if(action.type === 'PWD_CHANGE'){\r\n    return Object.assign({}, nowState, {\r\n      pwdText   : action.pwdText\r\n    });\r\n  }\r\n};\r\n\r\n//#endregion\r\n\r\ninjectAsyncReducer('LOGIN_REDUCER', loginReducer);\r\ninjectAsyncReducer('USER_REDUCER', userReducer);\r\n\r\nconst onClick = (e, user_id, pass_cd) => {\r\n\r\n  getDynamicSql_Mysql(\r\n    'Common/Common',\r\n    'login',\r\n    [{user_id,\r\n      pass_cd}]\r\n  ).then(\r\n    result => {\r\n      if(result.data.result){\r\n        if(result.data.data.length === 0){\r\n          alert('로그인 정보가 잘못되었습니다.');\r\n        }else{\r\n          const width = window.screen.availWidth;\r\n          const height = window.screen.availHeight;\r\n\r\n          const winProperties = 'location=no, toolbar=no, menubar=no, resizable=yes, scrollbars=no, addressbar=no, width=' + (width) + ',height=' + (height);\r\n\r\n          e.preventDefault(); \r\n          setSessionCookie(\"session\", \"SUCCESS\", 1/1440);   \r\n          let win = window.open('Home', 'DK', winProperties);\r\n          win.moveTo(0, 0);\r\n        }\r\n      }else{\r\n        alert('로그인에 실패했습니다.')\r\n      }\r\n    }\r\n  )\r\n};\r\n\r\n\r\nconst winClose = () => {\r\n  // self.close();\r\n  // window.open('','_self').close(); \r\n  // return false;\r\n}\r\n\r\nconst Login = (props) => {\r\n  \r\n  let userIdParentBorder = undefined;\r\n  let pwdParentBorder    = undefined;\r\n  if(gfs_getStoreValue('LOGIN_REDUCER' , 'userIdFocus')){\r\n    userIdParentBorder = 'black';\r\n  }\r\n\r\n  if(gfs_getStoreValue('LOGIN_REDUCER', 'pwdFocus')){\r\n    pwdParentBorder = 'black';\r\n  }\r\n\r\n  let userIdspanVisible = undefined;\r\n  let userIdinputTop    = undefined;\r\n  let pwdspanVisible    = undefined;\r\n  let pwdinputTop       = undefined;\r\n  const userIdText = gfs_getStoreValue('LOGIN_REDUCER', 'userIdText');\r\n  const pwdText = gfs_getStoreValue('LOGIN_REDUCER', 'pwdText');\r\n  if(userIdText !== ''){\r\n    userIdspanVisible = 'visible';\r\n    userIdinputTop    = '42%';\r\n  }\r\n\r\n  if(pwdText !== ''){\r\n    pwdspanVisible = 'visible';\r\n    pwdinputTop    = '42%';\r\n  }\r\n\r\n  let btnBackGround = '#b2dffc';\r\n  let btnDisabled   = true;\r\n  if(userIdText !== '' && pwdText !== ''){\r\n    btnBackGround = '#0095f6';\r\n    btnDisabled   = false;\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.Login_Main}>\r\n      <h1 className={styles.Login_Text}>Login</h1>\r\n      <div>\r\n        <form>\r\n            <ExplainInput placeholder='사용자ID' \r\n                          width='240px'\r\n                          height='35px'\r\n                          marginBottom='5px'\r\n                          parentBorder={userIdParentBorder} \r\n                          smallVisible={userIdspanVisible}\r\n                          location={userIdinputTop}\r\n                          onFocus={props.onUserIdFocus}\r\n                          onBlur={props.onUserIdBlur}\r\n                          onChange={props.onUserIdChange} />\r\n            \r\n            <ExplainInput placeholder='비밀번호' \r\n                          width='240px'\r\n                          height='35px'\r\n                          marginBottom='20px'\r\n                          parentBorder={pwdParentBorder} \r\n                          smallVisible={pwdspanVisible}\r\n                          location={pwdinputTop}\r\n                          onFocus={props.onPwdFocus}\r\n                          onBlur={props.onPwdBlur}  \r\n                          onChange={props.onPwdChange}\r\n                          type='password'/>\r\n\r\n          <div style={{textAlign:'center'}}>\r\n            \r\n          <Button value='로그인'\r\n                  color='white'\r\n                  disabled={btnDisabled}\r\n                  backgroundColor={btnBackGround}\r\n                  height='30px'\r\n                  width='240px'\r\n                  borderWidth='0px'\r\n                  borderRadius='3px'\r\n                  outline='0px' \r\n                  onClick={e => onClick(e, userIdText, pwdText)}/>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//#region 액션 이벤트\r\nconst onUserIdFocusEvent = () => {\r\n  return {\r\n    reducer    : 'LOGIN_REDUCER',\r\n    type       : 'USERID_FOCUS',\r\n    userIdFocus: true\r\n  }\r\n}\r\n\r\nconst onUserIdBlurEvent = () => {\r\n  return {\r\n    reducer    : 'LOGIN_REDUCER',\r\n    type       : 'USERID_FOCUS',\r\n    userIdFocus: false\r\n  }\r\n}\r\n\r\nconst onPwdFocusEvent = () => {\r\n  return {\r\n    reducer : 'LOGIN_REDUCER',\r\n    type    : 'PWD_FOCUS',\r\n    pwdFocus: true\r\n  }\r\n}\r\n\r\nconst onPwdBlurEvent = () => {\r\n  return {\r\n    reducer : 'LOGIN_REDUCER',\r\n    type    : 'PWD_FOCUS',\r\n    pwdFocus: false\r\n  }\r\n}\r\n\r\nconst onUserIdChange = (e) => {\r\n  return {\r\n    reducer   : 'LOGIN_REDUCER',\r\n    type      : 'USERID_CHANGE',\r\n    userIdText: e.value.trim()\r\n  }\r\n}\r\n\r\nconst onPwdChange = (e) => {\r\n  return {\r\n    reducer: 'LOGIN_REDUCER',\r\n    type   : 'PWD_CHANGE',\r\n    pwdText: e.value.trim()\r\n  }\r\n}\r\n//#endregion\r\n\r\n//#region 스토어 매개변수\r\nconst mapStateToProps = (state, ownProps) => {\r\n  \r\n  return {\r\n    userIdFocus: state.LOGIN_REDUCER.userIdFocus,\r\n    pwdFocus   : state.LOGIN_REDUCER.pwdFocus,\r\n    userIdText : state.LOGIN_REDUCER.userIdText,\r\n    pwdText    : state.LOGIN_REDUCER.pwdText\r\n  }\r\n};\r\n//#endregion\r\n\r\n//#region 디스패치 함수\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  \r\n  return {\r\n    onUserIdFocus: (e) => {\r\n      e.stopPropagation();\r\n      dispatch(onUserIdFocusEvent());\r\n    },\r\n    onPwdFocus: (e) => {\r\n      e.stopPropagation();\r\n      dispatch(onPwdFocusEvent());\r\n    },\r\n    onUserIdBlur: (e) => {\r\n      e.stopPropagation();\r\n      dispatch(onUserIdBlurEvent());\r\n    },\r\n    onPwdBlur: (e) => {\r\n      e.stopPropagation();\r\n      dispatch(onPwdBlurEvent());\r\n    },\r\n    onUserIdChange: (e) => {\r\n      e.stopPropagation();\r\n      dispatch(onUserIdChange(e.target))\r\n    },\r\n    onPwdChange: (e) => {\r\n      e.stopPropagation();\r\n      dispatch(onPwdChange(e.target))\r\n    }\r\n  }\r\n};\r\n//#endregion\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Login);","D:\\Project\\react\\src\\Home.js",["197"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SideBarMenuMain from './Component/Menu/SideBarMenu/SideBarMenuMain';\r\nimport TabList from './Component/Menu/tabMenu/TabList';\r\nimport WindowFrame from './Program/WindowFrame';\r\n\r\nimport './Home.css';\r\nimport {getSessionCookie} from \"./Cookies\";\r\n// import {ExampleApp} from './Component/Popup/TestPopup'\r\n\r\nlet isSession = false;\r\n\r\nconst Home = (props) => {  \r\n  const session = getSessionCookie(\"session\");\r\n  const leftWindow = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n    return p.open === n.open;\r\n  });\r\n\r\n  const windowState = useSelector((e) => {\r\n    if(e.WINDOWFRAME_REDUCER === undefined) {\r\n      return null;\r\n    }else{\r\n      return e.WINDOWFRAME_REDUCER.windowState\r\n    }\r\n  }, (p, n) => {\r\n    return (p === null ? 0 : p.length) === (n === null ? 0 : n.length)\r\n  });\r\n\r\n  // const SideBarMenuState = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n  //   return JSON.stringify(p) === JSON.stringify(n);\r\n  // });\r\n\r\n  // const width = SideBarMenuState[0].width;\r\n\r\n  let width = 343; \r\n  if(leftWindow.open) width = 90;\r\n  // if (session === \"SUCCESS\")\r\n  // {\r\n    isSession = true;\r\n  // }\r\n  return (\r\n    \r\n    <React.Fragment>      \r\n      {isSession ?\r\n      <>\r\n        <div style={{display:'inline-block', height:'100%'}} >\r\n          <SideBarMenuMain />\r\n        </div>\r\n        \r\n        <div style={{display:'inline-block', paddingRight:'17px', transition:'all 0.2s ease-in-out', position:'absolute', left:width, right:0, height:'100%'}}>\r\n          <div style={{display:'flex', flexDirection:'column', height:'100vh'}}>\r\n            <div style={{height:80}}>\r\n              <TabList />\r\n            </div>\r\n            <div style={{flex:1, display:'flex'}}> \r\n              <div style={{float:'left', width:'100%', position:'relative', zIndex:0, overflow:'hidden'}}>\r\n                {windowState != null &&\r\n                  windowState.map(e => \r\n                    <WindowFrame key={e.programId} programId={e.programId} programNam={e.programNam}/>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      :\r\n        <div>LOGIN PLZZZ</div>\r\n      }\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;","D:\\Project\\react\\src\\Cookies.js",["198"],"import React from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nexport const setSessionCookie = (key, value, expire) => {\r\n  console.log(key + \":\" + value);\r\n  Cookies.remove(key); // 원래 쿠키 삭제\r\n  Cookies.set(key, value, {expires : expire} ); // 키, 값,  만료일\r\n};\r\n\r\nexport const getSessionCookie = (key) => {\r\n  const sessionCookie = Cookies.get(key);\r\n\r\n  if (sessionCookie === undefined) {\r\n    return {};\r\n  } \r\n  else \r\n  {\r\n    console.log(\"sessionCookie : \" + sessionCookie)\r\n    return sessionCookie;\r\n  }\r\n};","D:\\Project\\react\\src\\Method\\Store.js",[],"D:\\Project\\react\\src\\Program\\WindowFrame.js",[],"D:\\Project\\react\\src\\Component\\Control\\ExplainInput.js",[],"D:\\Project\\react\\src\\Component\\Control\\Button.js",[],"D:\\Project\\react\\src\\db\\Mysql\\Mysql.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js",[],"D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabList.js",[],"D:\\Project\\react\\src\\db\\Mysql\\MysqlServer.js",[],"D:\\Project\\react\\src\\Method\\Comm.js",[],"D:\\Project\\react\\src\\Method\\Grid.js",[],"D:\\Project\\react\\src\\Program\\MES\\PgmTest.js",[],"D:\\Project\\react\\src\\JSON\\jsonControl.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\PgmTest2.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js",[],"D:\\Project\\react\\src\\Program\\MES\\Menu.js",["199","200"],"import React, { Component } from 'react';\r\nimport Grid from '../../Component/Grid/Grid';\r\nimport Layout from '../../Component/Layout/Layout';\r\n\r\nimport { gfc_initPgm, gfc_getAtt, gfc_getMultiLang } from '../../Method/Comm';\r\nimport { gfg_getGrid, gfg_appendRow, gfg_setValue, gfg_setSelectRow } from '../../Method/Grid';\r\nimport { gfo_getInput, gfo_getCombo, gfo_getDateTime, gfo_getNumber } from '../../Method/Component';\r\nimport { gfs_getStoreValue } from '../../Method/Store';\r\nimport { getCallSP_Mysql } from '../../db/Mysql/Mysql';\r\n\r\nimport { Number as columnNumber } from '../../Component/Grid/Column/Number';\r\nimport { Input as columnInput } from '../../Component/Grid/Column/Input';\r\nimport { DateTime as columnDateTime } from '../../Component/Grid/Column/DateTime';\r\nimport { Combobox as columnCombobox} from '../../Component/Grid/Column/Combobox';\r\n\r\nimport SearchDiv from '../../Component/Control/SearchDiv';\r\nimport DetailDiv from '../../Component/Control/DetailDiv';\r\n\r\nimport Input from '../../Component/Control/Input';\r\nimport Combobox from '../../Component/Control/Combobox';\r\nimport DateTime from '../../Component/Control/DateTime';\r\nimport Number from '../../Component/Control/Number';\r\n\r\nimport store from \"../../Store/Store.js\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        gfc_initPgm(props.pgm, props.nam, this);\r\n    }\r\n    Retrieve = () => {\r\n        const menu_id = gfo_getInput(this.props.pgm, 'search_menu_id').getValue();\r\n        const menu_nam = gfo_getInput(this.props.pgm, 'search_menu_nam').getValue();\r\n        const menu_use = gfo_getCombo(this.props.pgm, 'search_menu_use').getValue();                \r\n\r\n        getCallSP_Mysql(\r\n            [{SP        : 'SP_MENU_ED050',\r\n              ROWSTATUS : 'R',\r\n              COP_CD    : '10', \r\n              MENU_ID   : menu_id,\r\n              MENU_NAM  : menu_nam,\r\n              USE_YN    : menu_use,\r\n              MENU_LEVEL  : 0,\r\n              MENU_GRP_YN : '0',\r\n              UP_MENU_ID  : '',\r\n              PGM_ID      : '',\r\n              MENU_SEQ    : 0,\r\n              RETAUT_YN : '',\r\n              INSAUT_YN : '',\r\n              SAVAUT_YN : '',\r\n              DELAUT_YN : '',\r\n              PRNAUT_YN : '',\r\n              EXEAUT_YN : '',\r\n              APPAUT_YN : '',\r\n              XLSAUT_YN : '',\r\n              ETCAUT_YN : '',\r\n              UPDCHR_NO : '',\r\n            }]\r\n        ).then(\r\n            e=>{\r\n                const MSG_CODE = e.data.MSG_CODE;\r\n                const MSG_TEXT = e.data.MSG_TEXT;\r\n                if (e.data.result){\r\n                    const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n                    grid.resetData(e.data.data);\r\n                    gfg_setSelectRow(grid);\r\n                  }\r\n                  else{\r\n                  }                  \r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n            }\r\n        )\r\n    }\r\n\r\n    Insert = () => {\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        gfg_appendRow(grid, grid.getRowCount(), {}, 'MENU_NAM')\r\n    }\r\n    Save = () => {\r\n\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        getCallSP_Mysql(\r\n            [],\r\n            [{grid,\r\n              SP          : 'SP_MENU_ED050',\r\n              COP_CD    : '10',              \r\n              MENU_ID     : 'VARCHAR',\r\n              MENU_NAM    : 'VARCHAR',\r\n              USE_YN      : 'VARCHAR',\r\n              MENU_LEVEL  : 'DECIMAL',\r\n              MENU_GRP_YN : 'VARCHAR',\r\n              UP_MENU_ID  : 'VARCHAR',\r\n              PGM_ID      : 'VARCHAR',\r\n              MENU_SEQ    : 'INT',\r\n              RETAUT_YN : 'VARCHAR',\r\n              INSAUT_YN : 'VARCHAR',\r\n              SAVAUT_YN : 'VARCHAR',\r\n              DELAUT_YN : 'VARCHAR',\r\n              PRNAUT_YN : 'VARCHAR',\r\n              EXEAUT_YN : 'VARCHAR',\r\n              APPAUT_YN : 'VARCHAR',\r\n              XLSAUT_YN : 'VARCHAR',\r\n              ETCAUT_YN : 'VARCHAR',\r\n              UPDCHR_NO : 'VARCHAR'\r\n            }],\r\n            [{\r\n                UPDCHR_NO : gfs_getStoreValue('USER_REDUCER', 'USER_ID') //gfs_getStoreValue\r\n            }]\r\n        ).then(\r\n            e=>{\r\n                const MSG_CODE = e.data.MSG_CODE;\r\n                const MSG_TEXT = e.data.MSG_TEXT;\r\n                if (e.data.result){\r\n                    grid.resetOriginData()\r\n                    grid.restore();\r\n                  }\r\n                  else{\r\n                    const COL_NAM = e.data.COL_NAM;\r\n                    const ROW_KEY = e.data.ROW_KEY;\r\n          \r\n                    gfg_setSelectRow(grid, COL_NAM, ROW_KEY);\r\n                  }                  \r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n            }\r\n        )\r\n    }\r\n    Delete = () => {\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        getCallSP_Mysql(\r\n            [],\r\n            [{grid,\r\n              SP          : 'SP_MENU_ED050',\r\n              COP_CD    : '10',              \r\n              MENU_ID     : 'VARCHAR',\r\n              MENU_NAM    : 'VARCHAR',\r\n              USE_YN      : 'VARCHAR',\r\n              MENU_LEVEL  : 'DECIMAL',\r\n              MENU_GRP_YN : 'VARCHAR',\r\n              UP_MENU_ID  : 'VARCHAR',\r\n              PGM_ID      : 'VARCHAR',\r\n              MENU_SEQ    : 'INT',\r\n              RETAUT_YN : 'VARCHAR',\r\n              INSAUT_YN : 'VARCHAR',\r\n              SAVAUT_YN : 'VARCHAR',\r\n              DELAUT_YN : 'VARCHAR',\r\n              PRNAUT_YN : 'VARCHAR',\r\n              EXEAUT_YN : 'VARCHAR',\r\n              APPAUT_YN : 'VARCHAR',\r\n              XLSAUT_YN : 'VARCHAR',\r\n              ETCAUT_YN : 'VARCHAR',\r\n              UPDCHR_NO : 'VARCHAR'\r\n            }],\r\n            [{\r\n                UPDCHR_NO : gfs_getStoreValue('USER_REDUCER', 'USER_ID') //gfs_getStoreValue\r\n            }],\r\n            true\r\n        ).then(\r\n            e => {\r\n              const MSG_CODE = e.data.MSG_CODE;\r\n              const MSG_TEXT = e.data.MSG_TEXT;\r\n              const ROW_KEY = e.data.ROW_KEY;\r\n      \r\n              if(e.data.result){\r\n                grid.removeRow(ROW_KEY);\r\n                grid.resetOriginData();\r\n                grid.restore();\r\n                gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n              }else{\r\n                if (MSG_CODE === 'PHANTOM'){\r\n      \r\n                }else{\r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n                }\r\n              }\r\n            }\r\n          )\r\n    }\r\n\r\n    onSelectChange = (e) => {\r\n        if(e === null) return;\r\n        gfo_getNumber(this.props.pgm, 'detail_menu_seq').setValue(e.MENU_SEQ);\r\n        gfo_getInput(this.props.pgm, 'detail_menu_comment').setValue(e.BIGO);\r\n        gfo_getInput(this.props.pgm, 'detail_crt_no').setValue(e.CRTCHR_NO);\r\n        gfo_getDateTime(this.props.pgm, 'detail_crt_dt').setValue(e.CRT_DT);\r\n        gfo_getInput(this.props.pgm, 'detail_up_no').setValue(e.UPDCHR_NO);\r\n        gfo_getDateTime(this.props.pgm, 'detail_up_dt').setValue(e.UPD_DT);        \r\n      }\r\n    \r\n      afterChange = (e) => {\r\n      }\r\n\r\n    render(){\r\n        return (\r\n        <Layout split   ='horizontal'\r\n                minSize     ={[54]}\r\n                defaultSize ={54}\r\n                resizerStyle='none' >\r\n        <SearchDiv>\r\n            <Input pgm={this.props.pgm}\r\n                    id='search_menu_id'\r\n                    label={gfc_getAtt('메뉴 ID')}\r\n            >\r\n            </Input>\r\n            <Input pgm={this.props.pgm}\r\n                    id='search_menu_nam'\r\n                    label={gfc_getAtt('메뉴 이름')}>\r\n            </Input>\r\n\r\n            <Combobox pgm={this.props.pgm}\r\n                        id='search_menu_use'\r\n                        location= 'Common/Common.js'\r\n                        fn      = 'use_yn'\r\n                        value   = 'USE_YN'\r\n                        display = 'YN_STR'\r\n                        field   = {[]}\r\n                        param   = {[]}\r\n                        width   = {100}\r\n                        emptyRow= {true}>\r\n            </Combobox>            \r\n        </SearchDiv>\r\n\r\n            <Layout primary     = 'second'\r\n                    split   ='vertical'\r\n                    defaultSize = {'0%'}\r\n                    direction   = 'left'\r\n            >\r\n                <Grid pgm={this.props.pgm}\r\n                  id='main50'\r\n                  selectionChange={(e) => this.onSelectChange(e)}\r\n                  afterChange={(e) => this.afterChange(e)}\r\n                  columns = {[\r\n                                columnInput({name    : 'MENU_ID', \r\n                                            header  : gfc_getAtt('메뉴ID'), \r\n                                            width   : 120, \r\n                                            readOnly: false\r\n                                        }),\r\n                                columnInput({name    : 'MENU_NAM', \r\n                                            header  : gfc_getAtt('메뉴명'), \r\n                                            width   : 120, \r\n                                            readOnly: false\r\n                                        }),\r\n                                columnCombobox({name: 'USE_YN', \r\n                                                header: gfc_getAtt('사용여부'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),\r\n                                columnNumber({name : 'MENU_LEVEL',\r\n                                              header: gfc_getAtt('메뉴단계'),\r\n                                              readOnly : false,\r\n                                            }),\r\n                                columnCombobox({name: 'RETAUT_YN', \r\n                                                header: gfc_getAtt('조회권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'INSAUT_YN', \r\n                                                header: gfc_getAtt('등록권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),\r\n                                columnCombobox({name: 'SAVAUT_YN', \r\n                                                header: gfc_getAtt('저장권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),       \r\n                                columnCombobox({name: 'DELAUT_YN', \r\n                                                header: gfc_getAtt('삭제권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'PRNAUT_YN', \r\n                                                header: gfc_getAtt('출력권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'EXEAUT_YN', \r\n                                                header: gfc_getAtt('실행권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'APPAUT_YN', \r\n                                                header: gfc_getAtt('결재권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'XLSAUT_YN', \r\n                                                header: gfc_getAtt('엑셀권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'ETCAUT_YN', \r\n                                                header: gfc_getAtt('기타권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnNumber({name : 'MENU_SEQ',\r\n                                              header: gfc_getAtt('메뉴 SEQ'),\r\n                                              width : 0,\r\n                                              readOnly : true,                                              \r\n                                              }),\r\n                                columnInput({name  : 'BIGO', \r\n                                             header: gfc_getAtt('코멘트'), \r\n                                             width : 0,\r\n                                             readOnly: true\r\n                                             }),\r\n                                columnInput({name  : 'CRTCHR_NO', \r\n                                             header: gfc_getAtt('생성자'), \r\n                                             width : 0,\r\n                                             readOnly: true,\r\n                                             align   : 'center'\r\n                                            }),\r\n                                \r\n                                columnDateTime({name  : 'CRT_DT',\r\n                                                header: gfc_getAtt('생성일자'),\r\n                                                width : 0,\r\n                                                format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                                                time  : 'HH:mm',\r\n                                                editor: { \r\n                                                 timepicker: true\r\n                                                }\r\n                                              }),\r\n                                \r\n                                columnInput({name  : 'UPDCHR_NO', \r\n                                             header: gfc_getAtt('수정자'), \r\n                                             width : 0,\r\n                                             readOnly: true\r\n                                            }),\r\n  \r\n                                columnDateTime({name  : 'UPD_DT',\r\n                                                header: gfc_getAtt('수정일시'),\r\n                                                width : 0,\r\n                                                format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                                                time  : 'HH:mm',\r\n                                                readOnly: true\r\n                                              })\r\n                        \r\n                  ]}>\r\n\r\n                </Grid>\r\n                <DetailDiv title={gfc_getAtt('상세정보')}>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('메뉴 SEQ')}</th>\r\n                        <td>\r\n                            <Number pgm={this.props.pgm}\r\n                                    id='detail_menu_seq'>\r\n                            </Number>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('비고')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_menu_comment'>\r\n                            </Input>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('생성자')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_crt_no'\r\n                                    readOnly={true}>\r\n                            </Input>\r\n                        </td>\r\n                        <th>{gfc_getAtt('생성일')}</th>\r\n                        <td>\r\n                            <DateTime pgm={this.props.pgm}\r\n                                        id='detail_crt_dt'\r\n                                        format= {`${gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT')} HH:mm`}\r\n                                        readOnly={true}>\r\n                            </DateTime>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('갱신자')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_up_no'\r\n                                    readOnly={true}>\r\n                            </Input>\r\n                        </td>\r\n                        <th>{gfc_getAtt('갱신일')}</th>\r\n                        <td>\r\n                            <DateTime pgm={this.props.pgm}\r\n                                        id='detail_up_dt'\r\n                                        format= {`${gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT')} HH:mm`}\r\n                                        readOnly={true}>                                            \r\n                            </DateTime>\r\n                        </td>\r\n                    </tr>\r\n                </DetailDiv>\r\n\r\n            </Layout>\r\n        </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js",[],"D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js",[],"D:\\Project\\react\\src\\Component\\Control\\DetailDiv.js",[],"D:\\Project\\react\\src\\Component\\Control\\SearchDiv.js",[],"D:\\Project\\react\\src\\Method\\Popup.js",[],"D:\\Project\\react\\src\\Method\\Component.js",[],"D:\\Project\\react\\src\\Component\\Control\\Input.js",[],"D:\\Project\\react\\src\\Component\\Control\\Combobox.js",[],"D:\\Project\\react\\src\\Component\\Control\\DateTime.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart1.js",[],"D:\\Project\\react\\src\\Component\\Control\\Number.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart2.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart3.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart4.js",["201","202"],"import React, { useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as echarts from 'echarts';\r\n\r\nlet myChart;\r\n\r\nconst Chart4 = (props) => {\r\n  const chartDiv = useRef(null);\r\n  \r\n  const data = useSelector((e) => e.PGMTEST2_REDUCER.data4Org);\r\n\r\n  const dateList = data.map(function (item) {\r\n      return item.OTIME;\r\n  });\r\n  const valueList = data.map(function (item) {\r\n      return item.VALUE;\r\n  });\r\n\r\n  const option = {\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        boundaryGap: [0, '30%']\r\n    },\r\n    visualMap: {\r\n        type: 'piecewise',\r\n        show: false,\r\n        dimension: 0,\r\n        seriesIndex: 0,\r\n        pieces: [{\r\n            gt: 1,\r\n            lt: 3,\r\n            color: 'rgba(0, 0, 180, 0.4)'\r\n        }, {\r\n            gt: 5,\r\n            lt: 7,\r\n            color: 'rgba(255, 0, 0)'\r\n        }]\r\n    },\r\n    series: [\r\n        {\r\n            type: 'line',\r\n            smooth: 0.6,\r\n            symbol: 'none',\r\n            lineStyle: {\r\n                color: '#5470C6',\r\n                width: 5\r\n            },\r\n            markLine: {\r\n                symbol: ['none', 'none'],\r\n                label: {show: false},\r\n                data: [\r\n                    {xAxis: 1},\r\n                    {xAxis: 3},\r\n                    {xAxis: 5},\r\n                    {xAxis: 7}\r\n                ]\r\n            },\r\n            areaStyle: {},\r\n            data: [\r\n                ['2019-10-10', 200],\r\n                ['2019-10-11', 560],\r\n                ['2019-10-12', 750],\r\n                ['2019-10-13', 580],\r\n                ['2019-10-14', 250],\r\n                ['2019-10-15', 300],\r\n                ['2019-10-16', 450],\r\n                ['2019-10-17', 300],\r\n                ['2019-10-18', 100]\r\n            ]\r\n        }\r\n    ]\r\n  };\r\n\r\n\r\n  if(myChart === undefined && chartDiv.current !== null){\r\n     myChart = echarts.init(chartDiv.current);\r\n  }\r\n\r\n  if(option && myChart) myChart.setOption(option);\r\n\r\n  return(\r\n    <div ref={chartDiv} style={{float:'left', width:'50%', height:'100%'}} ></div>\r\n  );\r\n}\r\n\r\nexport default Chart4;","D:\\Project\\react\\src\\Component\\Grid\\Column\\Number.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\Input.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Grid.js",[],"D:\\Project\\react\\src\\Component\\Layout\\Layout.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\DateTime.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\Combobox.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js",[],"D:\\Project\\react\\src\\Component\\Popup\\PopupFrame.js",["203"],"D:\\Project\\react\\src\\Program\\POPUP\\PopupTest.js",["204"],"import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport Layout from '../../Component/Layout/Layout';\r\nimport SearchDiv from '../../Component/Control/SearchDiv';\r\nimport Input from '../../Component/Control/Input';\r\nimport { gfc_getAtt } from '../../Method/Comm';\r\nimport { gfp_openPopup } from '../../Method/Popup';\r\n\r\nclass PopupTest extends Component {\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  // }\r\n  \r\n  render() {\r\n\r\n    return(        \r\n      <Layout split       ='horizontal'\r\n              minSize     ={[54]}\r\n              defaultSize ={54}\r\n              resizerStyle='none' \r\n      >\r\n        <SearchDiv>\r\n            <Input pgm={this.props.pgm}\r\n                   id='search_user_nam'\r\n                   label={gfc_getAtt('사용자명')} />\r\n            <Input pgm={this.props.pgm}\r\n                   id='search_user_id'\r\n                   label={gfc_getAtt('사용자ID')} />\r\n                   \r\n        </SearchDiv>\r\n        <div>HIHI</div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nPopupTest.propTypes = {\r\n\r\n};\r\n\r\nPopupTest.defaultProps = {\r\n\r\n};\r\n\r\nexport default PopupTest;",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":10,"column":28,"nodeType":"211","messageId":"212","endLine":10,"endColumn":44},{"ruleId":"209","severity":1,"message":"213","line":114,"column":7,"nodeType":"211","messageId":"212","endLine":114,"endColumn":15},{"ruleId":"209","severity":1,"message":"214","line":15,"column":9,"nodeType":"211","messageId":"212","endLine":15,"endColumn":16},{"ruleId":"209","severity":1,"message":"215","line":1,"column":8,"nodeType":"211","messageId":"212","endLine":1,"endColumn":13},{"ruleId":"209","severity":1,"message":"216","line":6,"column":38,"nodeType":"211","messageId":"212","endLine":6,"endColumn":50},{"ruleId":"209","severity":1,"message":"217","line":24,"column":8,"nodeType":"211","messageId":"212","endLine":24,"endColumn":13},{"ruleId":"209","severity":1,"message":"218","line":12,"column":9,"nodeType":"211","messageId":"212","endLine":12,"endColumn":17},{"ruleId":"209","severity":1,"message":"219","line":15,"column":9,"nodeType":"211","messageId":"212","endLine":15,"endColumn":18},{"ruleId":"209","severity":1,"message":"220","line":6,"column":27,"nodeType":"211","messageId":"212","endLine":6,"endColumn":39},{"ruleId":"209","severity":1,"message":"221","line":8,"column":10,"nodeType":"211","messageId":"212","endLine":8,"endColumn":23},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'getSessionCookie' is defined but never used.","Identifier","unusedVar","'winClose' is assigned a value but never used.","'session' is assigned a value but never used.","'React' is defined but never used.","'gfg_setValue' is defined but never used.","'store' is defined but never used.","'dateList' is assigned a value but never used.","'valueList' is assigned a value but never used.","'gfs_dispatch' is defined but never used.","'gfp_openPopup' is defined but never used.","no-global-assign","no-unsafe-negation"]